services:
  db:
    image: postgres:latest
    restart: unless-stopped 
    container_name: postgres_db
    hostname: postgres_db
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./docker/postgres:/docker-entrypoint-initdb.d
    env_file:
      - .env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s

  kafka:
    image: confluentinc/cp-kafka:7.6.1
    container_name: kafka
    hostname: kafka
    ports:
      - "9092:9092"
    environment:
      CLUSTER_ID: "Abc123Def456Ghi789Jkl0"  
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: "broker,controller"
      KAFKA_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
      KAFKA_LISTENERS: "PLAINTEXT://:9092,CONTROLLER://:9093"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://kafka:9092"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT"
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@kafka:9093"
      KAFKA_INTER_BROKER_LISTENER_NAME: "PLAINTEXT"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
    volumes:
      - kafkaData:/var/lib/kafka/data
    healthcheck:
      test: ["CMD-SHELL", "kafka-broker-api-versions --bootstrap-server localhost:9092 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 60s

  kafka-init:
    image: confluentinc/cp-kafka:7.6.1
    depends_on:
      kafka:
        condition: service_healthy
    command: >
      /bin/bash -c "
      /usr/bin/kafka-topics
      --bootstrap-server kafka:9092
      --create
      --topic order
      --partitions 3
      --replication-factor 1
      --if-not-exists
      "
  
  app:
    build: .
    container_name: app
    environment:      
      APP_DB_PORT: 5432
      APP_DB_HOST: postgres_db
      KAFKA_PORT: 9092
      KAFKA_HOST: kafka
      APP_HOST: 0.0.0.0   
      APP_PORT: 8080
    ports:
      - "8081:8080"
    env_file:
      - .env
    depends_on:
      db: 
        condition: service_healthy
      kafka:
        condition: service_healthy
      

volumes:
  pgdata:
  kafkaData:


