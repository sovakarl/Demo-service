services:
  db:
    image: postgres:latest
    restart: unless-stopped 
    container_name: postgres_db
    hostname: postgres_db
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./docker/postgres:/docker-entrypoint-initdb.d
    env_file:
      - .env
  # kafka:
  #   image: bitnami/kafka:3.7
  #   container_name: kafka
  #   ports:
  #     - "9092:9092"
  #     - "9093:9093"
  #   environment:
  #     - KAFKA_CFG_NODE_ID=1
  #     - KAFKA_CFG_PROCESS_ROLES=controller,broker
  #     - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
  #     - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
  #     - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
  #     - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
  #     - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
  #     - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
  #     - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=false
  #     - KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR=1
  #     - KAFKA_CFG_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=1
  #     - KAFKA_CFG_TRANSACTION_STATE_LOG_MIN_ISR=1
  #     - ALLOW_PLAINTEXT_LISTENER=yes
  #   volumes:
  #     -kafkaData:/bitnami/kafka

  # app:
  #   # context: ./
  #   build:

  # kafka
volumes:
  pgdata:
  # kafkaData:
